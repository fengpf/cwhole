1. 写一段乱七八糟的代码，做checkpatch
比如：
main()
{
int i,j;
 for(i=0;i<10;i++)
   j=8;
   		j++;
}

检查结果：
baohua@baohua-VirtualBox:~/develop/training/experiments/c$ ../../program-c/checkpatch.pl --no-tree -f main.c 
ERROR: space required after that ',' (ctx:VxV)
#3: FILE: main.c:3:
+int i,j;
      ^

WARNING: please, no spaces at the start of a line
#4: FILE: main.c:4:
+ for(i=0;i<10;i++)$

WARNING: suspect code indent for conditional statements (1, 3)
#4: FILE: main.c:4:
+ for(i=0;i<10;i++)
+   j=8;

ERROR: spaces required around that '=' (ctx:VxV)
#4: FILE: main.c:4:
+ for(i=0;i<10;i++)
       ^

ERROR: space required after that ';' (ctx:VxV)
...

2. 看看ioccc的代码：
~/develop/training/program-c/ioccc.c
体会这种代码为什么不好.

试图编译gcc ioccc.c
并且运行./a.out

3. 对比一下各种常见的排版风格：
~/develop/training/program-c/indent
观察Makefile，indent工具是如何格式化的

4. 
写下面的代码：
---------main.c--------

__attribute__((weak)) void sayhi(void )
{
	printf("hello\n");
}

main()
{
	sayhi();
}

--------strong.c--------
void sayhi(void )
{
        printf("nihao\n");
}

第一次编译和运行：
gcc main.c
./a.out
看打印什么

第二次编译和运行：
gcc main.c strong.c
./a.out
看打印什么
为什么？

5.
写下面的代码main.c，用doxygen进行扫描(如果doxygen没有安装，运行sudo apt-get install doxygen安装)，
得到文档

--------------main.c----------------

/**
 * @file
 * @author  宋宝华 <xxx@example.com>
 * @version 1.0
 *
 * @section LICENSE
 *
 * GPLv2 自由软件
 *
 * @section DESCRIPTION
 *
 * 一个最简单的例子
 */


/**
 * Constructor that sets the time to a given value.
 * 
 * @param timemillis Number of milliseconds 
 *        passed since Jan 1, 1970.
 */
Time (int timemillis) {
    // the code
}

/**
 * say hi
 * 
 * @param str what you are saying
 */
void sayhi(char *str) __attribute__((weak))
{
	printf("%s\n", str);
}

main()
{
	sayhi();
}
用doxygen进行扫描:
doxygen main.c 
查看生成的网页：
 cd html/
firefox index.html

6. 预习阅读：
邵国际: C 语言对象化设计实例 —— 命令解析器
https://mp.weixin.qq.com/s/cuy0PEVRR4f4h_RCiQeTdQ
